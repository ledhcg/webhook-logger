"use client";

import Link from "next/link";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
  CardFooter,
} from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import {
  MessageSquare,
  Info,
  AlertTriangle,
  LogIn,
  UserPlus,
  CheckCircle,
  Clock,
  Shield,
  Filter,
  Webhook,
  Eye,
  Database,
} from "lucide-react";
import { useAuth } from "@/components/AuthProvider";
import { siteConfig } from "@/config/site";

export default function Home() {
  const { user, isLoading } = useAuth();

  // Removed automatic redirect to dashboard for authenticated users
  // This allows authenticated users to view public pages

  return (
    <main className="min-h-screen bg-gradient-to-b from-white to-slate-50">
      {/* Hero Section */}
      <header className="py-12 px-4 md:px-8 bg-gradient-to-r from-blue-50 to-indigo-50">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-12 mt-6">
            <h1 className="text-4xl md:text-6xl font-bold mb-4 text-slate-800 tracking-tight">
              Webhook <span className="text-blue-600">Logger</span>
            </h1>
            <p className="text-xl md:text-2xl text-slate-600 max-w-3xl mx-auto mb-8">
              A simple webhook logging server that allows you to receive, log, and inspect 
              webhook requests in real-time.
            </p>

            {/* Authentication buttons */}
            {!isLoading && !user && (
              <div className="flex flex-col sm:flex-row justify-center gap-4 mt-8">
                <Button size="lg" asChild className="px-8">
                  <Link href="/auth/login">
                    <LogIn className="mr-2 h-5 w-5" />
                    Sign in
                  </Link>
                </Button>
                <Button size="lg" variant="outline" asChild className="px-8">
                  <Link href="/auth/register">
                    <UserPlus className="mr-2 h-5 w-5" />
                    Create account
                  </Link>
                </Button>
              </div>
            )}

            {!isLoading && user && (
              <div className="mt-8">
                <Button size="lg" asChild className="px-8">
                  <Link href="/dashboard">Go to dashboard</Link>
                </Button>
              </div>
            )}
          </div>
        </div>
      </header>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 md:px-8 py-16">
        {/* Features Section */}
        <section className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4 text-slate-800">Features</h2>
            <p className="text-lg text-slate-600 max-w-2xl mx-auto">
              Built with Next.js 15, TypeScript, and Supabase for a modern, real-time webhook logging experience.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Webhook className="w-5 h-5 text-blue-600" />
                  Request Capture
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-slate-600">
                  Captures webhook POST requests for reliable logging and inspection.
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Database className="w-5 h-5 text-blue-600" />
                  Comprehensive Logging
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-slate-600">
                  Logs request method, headers, body, source, and path for complete traceability.
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Clock className="w-5 h-5 text-blue-600" />
                  Real-time Updates
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-slate-600">
                  See webhook logs in real-time with Supabase Realtime integration.
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Eye className="w-5 h-5 text-blue-600" />
                  Detailed Inspection
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-slate-600">
                  View detailed information for each log entry with a clean, intuitive interface.
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Shield className="w-5 h-5 text-blue-600" />
                  User Authentication
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-slate-600">
                  Secure user authentication and token-based webhook access for privacy.
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Filter className="w-5 h-5 text-blue-600" />
                  Token Filtering
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-slate-600">
                  Filter webhook logs by specific tokens to quickly find relevant data.
                </p>
              </CardContent>
            </Card>
          </div>
        </section>

        {/* How It Works Section */}
        <section className="mb-16">
          <Tabs defaultValue="overview" className="mb-8">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="overview">Overview</TabsTrigger>
              <TabsTrigger value="endpoints">Endpoints</TabsTrigger>
              <TabsTrigger value="usage">Usage</TabsTrigger>
            </TabsList>

            <TabsContent value="overview" className="mt-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Info className="w-5 h-5 text-blue-600" />
                    How Webhook Logger Works
                  </CardTitle>
                  <CardDescription>
                    A simple way to debug and monitor your webhook requests
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <p>
                    Webhook Logger provides a simple yet powerful way to capture and inspect webhook requests.
                    Each request is logged with comprehensive details including headers, body, source IP, and path.
                  </p>
                  
                  <div className="bg-slate-50 p-4 rounded-md">
                    <h3 className="font-medium mb-2 flex items-center">
                      <CheckCircle className="w-4 h-4 text-green-600 mr-2" />
                      Create an account
                    </h3>
                    <p className="text-sm text-slate-600 ml-6">
                      Sign up for a free account to start logging your webhooks.
                    </p>
                  </div>
                  
                  <div className="bg-slate-50 p-4 rounded-md">
                    <h3 className="font-medium mb-2 flex items-center">
                      <CheckCircle className="w-4 h-4 text-green-600 mr-2" />
                      Generate webhook tokens
                    </h3>
                    <p className="text-sm text-slate-600 ml-6">
                      Create and manage unique tokens for different services or applications.
                    </p>
                  </div>
                  
                  <div className="bg-slate-50 p-4 rounded-md">
                    <h3 className="font-medium mb-2 flex items-center">
                      <CheckCircle className="w-4 h-4 text-green-600 mr-2" />
                      Send requests with your token
                    </h3>
                    <p className="text-sm text-slate-600 ml-6">
                      Include your token in the X-Webhook-Token header with your requests.
                    </p>
                  </div>
                  
                  <div className="bg-slate-50 p-4 rounded-md">
                    <h3 className="font-medium mb-2 flex items-center">
                      <CheckCircle className="w-4 h-4 text-green-600 mr-2" />
                      View logs in real-time
                    </h3>
                    <p className="text-sm text-slate-600 ml-6">
                      Watch as your webhook logs appear in real-time on your dashboard.
                    </p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="endpoints" className="mt-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Webhook className="w-5 h-5 text-blue-600" />
                    Available Endpoints
                  </CardTitle>
                  <CardDescription>
                    Send webhooks to these endpoints to log requests
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="bg-slate-50 p-4 rounded-md">
                      <div className="font-mono text-sm">
                        <div className="flex items-center mb-2">
                          <span className="inline-block w-16 text-blue-600 font-semibold">
                            POST
                          </span>
                          <span>/api/webhook</span>
                        </div>
                        <p className="text-slate-600 ml-16">
                          Main webhook endpoint that accepts POST requests with your token
                        </p>
                      </div>
                    </div>
                    
                    <div className="mt-4 font-mono text-sm">
                      <h3 className="font-medium mb-2">Example Headers:</h3>
                      <div className="bg-slate-50 p-4 rounded-md">
                        <p className="text-slate-600">Content-Type: application/json</p>
                        <p className="text-slate-600">X-Webhook-Token: your_token_here</p>
                      </div>
                    </div>
                  </div>
                </CardContent>
                <CardFooter>
                  <Alert className="mt-4 bg-blue-50 border-blue-200">
                    <AlertTriangle className="h-4 w-4 text-blue-600" />
                    <AlertTitle>Example curl command</AlertTitle>
                    <AlertDescription className="font-mono text-xs mt-2">
                      curl -X POST {'{your_domain}'}/api/webhook<br />
                      -H &quot;Content-Type: application/json&quot;<br />
                      -H &quot;X-Webhook-Token: your_token_here&quot;<br />
                      -d '{'{"event":"test", "data":{"message":"Hello World"}}'}' 
                    </AlertDescription>
                  </Alert>
                </CardFooter>
              </Card>
            </TabsContent>

            <TabsContent value="usage" className="mt-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <MessageSquare className="w-5 h-5 text-blue-600" />
                    Using the Dashboard
                  </CardTitle>
                  <CardDescription>
                    How to view and manage your webhook logs
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  {!user ? (
                    <Alert className="bg-blue-50 border-blue-200">
                      <AlertTitle className="text-blue-800 font-medium">
                        Authentication required
                      </AlertTitle>
                      <AlertDescription className="text-blue-700">
                        Please sign in or create an account to view your webhook logs.
                      </AlertDescription>
                    </Alert>
                  ) : (
                    <div className="space-y-4">
                      <p className="text-slate-600">
                        Your dashboard provides real-time access to all your webhook logs.
                        You can filter by token, view detailed information for each request,
                        and manage your webhook tokens.
                      </p>
                      <Button asChild>
                        <Link href="/dashboard">Go to your dashboard</Link>
                      </Button>
                    </div>
                  )}
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </section>

        {/* Footer */}
        <footer className="mx-auto pb-4">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <div className="flex items-center space-x-4 mb-4 md:mb-0">
              <span className="font-medium text-slate-700">{siteConfig.name}</span>
              <span className="text-xs px-2 py-1 rounded-full bg-blue-50 text-blue-600">
                {siteConfig.metadata.version}
              </span>
            </div>
            
            <div className="flex flex-wrap items-center gap-x-6 gap-y-2 text-sm">
              <span className="text-slate-500">Built with Next.js 15</span>
              <a 
                href={siteConfig.links.github} 
                target="_blank" 
                rel="noopener noreferrer"
                className="text-slate-500 hover:text-blue-600 transition-colors"
              >
                GitHub
              </a>
              <a 
                href={siteConfig.author.url}
                target="_blank"
                rel="noopener noreferrer"
                className="text-slate-500 hover:text-blue-600 transition-colors"
              >
                {siteConfig.author.name}
              </a>
            </div>
          </div>
          
          <div className="mt-6 pt-6 border-t border-slate-200 flex flex-col md:flex-row md:items-center md:justify-between text-sm text-slate-500">
            <p>{siteConfig.copyright}</p>
            <p className="mt-2 md:mt-0">Logs deleted after 7 days of inactivity</p>
          </div>
        </footer>
      </div>
    </main>
  );
}
